{"./":{"url":"./","title":"Introduction","keywords":"","body":"私のメモ めもめも "},"aws/":{"url":"aws/","title":"AWS","keywords":"","body":"AWS (Amazon Web Services) "},"aws/ec2.html":{"url":"aws/ec2.html","title":"EC2","keywords":"","body":"EC2 SessionManager と send-ssh-public-key を組み合わせて SSH 接続する send-ssh-public-key での public key 登録 aws ec2-instance-connect send-ssh-public-key コマンドで一時的 (60秒間だけ有効) な public key の登録が可能 aws ec2-instance-connect send-ssh-public-key \\ --instance-id i-xxxxxxxxxxxxxxxxx \\ --instance-os-user ec2-user \\ --availability-zone ap-northeast-1c \\ --ssh-public-key file://$HOME/.ssh/id_rsa.pub availability-zone をいちいち指定するのは面倒なので instance-id から aws コマンドで取得する aws ec2 describe-instances \\ --instance-ids i-xxxxxxxxxxxxxxxxx \\ --query 'Reservations[0].Instances[0].Placement.AvailabilityZone' \\ --output text Instance Id 一覧の取得 aws ec2 describe-instances \\ --query 'Reservations[].Instances[].InstanceId, Reservations[].Instances[].InstanceType' \\ --output text "},"aws/route53.html":{"url":"aws/route53.html","title":"Route53","keywords":"","body":"Route53 CLI によるレコードの更新 # zone id の取得 zone_id=$(basename $(aws route53 list-hosted-zones-by-name --dns-name $domain | jq -r '.HostedZones[] | select(.Config.PrivateZone == false) | .Id')) { \"Changes\": [ { \"Action\": \"UPSERT\", \"ResourceRecordSet\": { \"Name\": \"www.example.com\", \"Type\": \"A\", \"TTL\": 60, \"ResourceRecords\": [ { \"Value\": \"192.168.0.1\" }, { \"Value\": \"192.168.0.2\" } ] } } ] } aws route53 change-resource-record-sets --hosted-zone-id $zone_id --change-batch file://request.json "},"aws/bookmarks.html":{"url":"aws/bookmarks.html","title":"読み物","keywords":"","body":"Bookmarks 「AWSの深いところ見せちゃいます！ by AWSクラウドサポートエンジニア」連載一覧https://codezine.jp/article/corner/685 "},"gcp/":{"url":"gcp/","title":"GCP","keywords":"","body":"GCP (Google Cloud Platform) "},"gcp/gcloud.html":{"url":"gcp/gcloud.html","title":"gcloud","keywords":"","body":"gcloud ディレクトリ デフォルトでは ~/.config/gcloud に設定ファイルとか認証情報の類が配置される gcloud init コマンドを実行することで初期化することができるが、この設定情報は複数持って切り替えることができる $ gcloud config configurations ERROR: (gcloud.config.configurations) Command name argument expected. Available commands for gcloud config configurations: activate Activates an existing named configuration. create Creates a new named configuration. delete Deletes a named configuration. describe Describes a named configuration by listing its properties. list Lists existing named configurations. For detailed information on this command and its flags, run: gcloud config configurations --help また、このディレクトリは環境変数 CLOUDSDK_CONFIG で変更することができる ディレクトリ切り替えスクリプト function gcenv { case \"$1\" in create) if [ -z \"$2\" ] ; then echo \"Usage: gcenv create \" 1>&2 return 1 fi if [ ! -d \"$HOME/.gcloud/$2\" ] ; then mkdir -p \"$HOME/.gcloud/$2\" export CLOUDSDK_CONFIG=\"$HOME/.gcloud/$2\" else echo \"already exists\" 1>&2 return 0 fi ;; show) echo \"CLOUDSDK_CONFIG=${CLOUDSDK_CONFIG}\" echo \"GOOGLE_APPLICATION_CREDENTIALS=${GOOGLE_APPLICATION_CREDENTIALS}\" ;; list|ls) ls -d $HOME/.gcloud/* ;; /*) if [ -d \"$1\" ] ; then export CLOUDSDK_CONFIG=\"$1\" fi ;; *) if [ -z \"$1\" ] ; then export CLOUDSDK_CONFIG=$(ls -d $HOME/.gcloud/* | sort | fzf) elif [ -d \"$HOME/.gcloud/$1\" ] ; then export CLOUDSDK_CONFIG=\"$HOME/.gcloud/$1\" else export CLOUDSDK_CONFIG=$(ls -d $HOME/.gcloud/* | sort | fzf) fi ;; esac if [ -n \"${CLOUDSDK_CONFIG}\" ] ; then if [ -f \"${CLOUDSDK_CONFIG}/application_default_credentials.json\" ] ; then export GOOGLE_APPLICATION_CREDENTIALS=\"${CLOUDSDK_CONFIG}/application_default_credentials.json\" fi fi } 認証 gcloud コマンドなどで GCP の API にアクセスするためにはログインが必要で、次のコマンドでログインすることができる gcloud auth login --no-launch-browser --no-launch-browser をつけない場合は最後に使ったブラウザで承認ウインドウが開くため、複数プロファイルで ブラウザを使っている場合には嬉しくないことがある サービスアカウント Terraform などを使う場合は ServiceAccount が必要になるが Google Account や Cloud Identity、Google Workspace (G Suite) のアカウントでやりたい そういう場合に default credential というものが使える 次のコマンドで ~/.config/gcloud/application_default_credentials.json に作成される ディレクトリは CLOUDSDK_CONFIG が設定されていればそこに作成される gcloud auth application-default login --no-launch-browser これで作成されたファイルの PATH を環境変数 GOOGLE_APPLICATION_CREDENTIALS に設定する Project 設定 現在の config の project を変更するには次のコマンドを使う gcloud config set project PROJECT-ID 現在の設定確認 gcloud config list gcloud config configurations コマンドで config は複数持って切り替えることが可能 ただし、ファイルに書かれるため shell ごとに切り替えたいという場合はディレクトリを分けて 環境変数 CLOUDSDK_CONFIG で切り替える必要がある "},"debian/":{"url":"debian/","title":"Debian","keywords":"","body":"Debian (Ubuntu) "},"postgresql/":{"url":"postgresql/","title":"PostgreSQL","keywords":"","body":"PostgreSQL "},"mysql/":{"url":"mysql/","title":"MySQL","keywords":"","body":"MySQL "},"kubernetes/":{"url":"kubernetes/","title":"Kubernetes","keywords":"","body":"Kubernetes "}}